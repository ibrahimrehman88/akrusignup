from selenium.webdriver.common.by import By
from selenium.webdriver.support.select import Select
from src.testproject.classes import DriverStepSettings, StepSettings
from src.testproject.decorator import report_assertion_errors
from src.testproject.enums import SleepTimingType
from src.testproject.sdk.drivers import webdriver
import pytest

import requests
import re
from re import T
import re
import pytest
from selenium.webdriver.support.expected_conditions import text_to_be_present_in_element_value
from lib2to3.pgen2 import driver
from selenium import webdriver
import time
import pickle
from selenium.webdriver.common import actions
from selenium.webdriver.common import by
from selenium.webdriver.common import keys
#from selenium.webdriver.common import keys  
from selenium.webdriver.common.keys import Keys  
#from selenium.webdriver.chromium.webdriver import ChromiumDriver
from selenium.webdriver.support.ui import Select
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC




"""
This pytest test was automatically generated by TestProject
    Project: My first Project
    Package: TestProject.Generated.Tests.MyFirstProject
    Test: sigle_signup
    Generated by: Muhammad Ibrahim (ibrahimrehman88@gmail.com)
    Generated on 03/09/2022, 04:41:50
"""
PATH = "E:\chromedriver"

chrome_options = webdriver.ChromeOptions(); 
chrome_options.add_experimental_option("excludeSwitches", ['enable-automation']);

driver = webdriver.Chrome(PATH)
driver.maximize_window()  



intvariable = pickle.load(open(r"C:\Users\Ibrahim\.vscode\variableFileap.dat", "rb"))
strvariable = str(intvariable)
intvariable = intvariable + 1
pickle.dump(intvariable ,  open(r"C:\Users\Ibrahim\.vscode\variableFileap.dat", "wb"))


useremail = "avdev-52@yopmail.com"




# @pytest.fixture()
# def driver():
#     driver = webdriver.Chrome(token="f_1hwOkIkbvjwf4rvPdMFYhyyPVAHDHrICakI0LD98g",
#                               project_name="My first Project",
#                               job_name="sigle_signup")
#     step_settings = StepSettings(timeout=15000,
#                                  sleep_time=500,
#                                  sleep_timing_type=SleepTimingType.Before)
#     with DriverStepSettings(driver, step_settings):
#         yield driver
#     driver.quit()


@report_assertion_errors
def test_main():
    # Test Parameters
    # Auto generated application URL parameter
    ApplicationURL = "https://avaxdev.akru.co/register"

    # 1. Navigate to '{ApplicationURL}'
    # Navigates the specified URL (Auto-generated)
    driver.get(f'{ApplicationURL}')

    # 2. Click 'firstName'
    firstname = driver.find_element(By.CSS_SELECTOR,
                                    "[name='firstName']")
    firstname.click()

    # 3. Type 'ibrahim' in 'firstName'
    firstname = driver.find_element(By.CSS_SELECTOR,
                                    "[name='firstName']")
    firstname.send_keys(data.firstname)

    # 4. Click 'lastName'
    lastname = driver.find_element(By.CSS_SELECTOR,
                                   "[name='lastName']")
    lastname.click()

    # 5. Type 'rehman' in 'lastName'
    lastname = driver.find_element(By.CSS_SELECTOR,
                                   "[name='lastName']")
    lastname.send_keys(data.lastname)

    # 6. Click 'email'
    email = driver.find_element(By.CSS_SELECTOR,
                                "[name='email']")
    email.click()

    # 7. Type 'ibr35@yopmail.com' in 'email'
    email = driver.find_element(By.CSS_SELECTOR,
                                "[name='email']")
    email.send_keys(useremail)

    # 8. Click 'type'
    type = driver.find_element(By.XPATH,
                               "//fieldset/div/label[1]//input")
    type.click()

    # 9. Click 'address'
    address = driver.find_element(By.CSS_SELECTOR,
                                  "[name='address']")
    address.click()

    # 10. Scroll window by ('0','194')
    driver.execute_script("window.scrollBy(0,194)")

    # 11. Type 'street 9' in 'address'
    address = driver.find_element(By.CSS_SELECTOR,
                                  "[name='address']")
    address.send_keys("street 9")

    # 12. Click 'stateName'
    statename = driver.find_element(By.CSS_SELECTOR,
                                    "[name='stateName']")
    statename.click()

    # 13. Select the 'California' option in 'stateName'
    statename = driver.find_element(By.CSS_SELECTOR,
                                    "[name='stateName']")
    Select(statename).select_by_value("California")

    # 14. Click 'stateName'
    statename = driver.find_element(By.CSS_SELECTOR,
                                    "[name='stateName']")
    statename.click()

    # 15. Scroll window by ('0','323')
    driver.execute_script("window.scrollBy(0,323)")

    # 16. Click 'city'
    city = driver.find_element(By.CSS_SELECTOR,
                               "[name='city']")
    city.click()

    # 17. Type 'rwp' in 'city'
    city = driver.find_element(By.CSS_SELECTOR,
                               "[name='city']")
    city.send_keys("rwp")

    # 18. Click 'zipCode'
    zipcode = driver.find_element(By.CSS_SELECTOR,
                                  "[name='zipCode']")
    zipcode.click()

    # 19. Type '46000' in 'zipCode'
    zipcode = driver.find_element(By.CSS_SELECTOR,
                                  "[name='zipCode']")
    zipcode.send_keys("46000")

    # 20. Click 'number'
    number = driver.find_element(By.CSS_SELECTOR,
                                 "#outlined-error-helper-text")
    number.click()

    # 21. Scroll window by ('0','77')
    driver.execute_script("window.scrollBy(0,77)")

    # 22. Scroll window by ('0','155')
    driver.execute_script("window.scrollBy(0,155)")

    # 23. Type '3215716436' in 'number'
    number = driver.find_element(By.CSS_SELECTOR,
                                 "#outlined-error-helper-text")
    number.send_keys("3215716436")

    # 24. Click 'date-picker-dialog'
    date_picker_dialog = driver.find_element(By.CSS_SELECTOR,
                                             "#date-picker-dialog")
    date_picker_dialog.click()

    # 25. Scroll window by ('0','210')
    driver.execute_script("window.scrollBy(0,210)")

    # 26. Scroll window by ('0','-156')
    driver.execute_script("window.scrollBy(0,-156)")

    # 27. Type '03/04/1999' in 'date-picker-dialog'
    date_picker_dialog = driver.find_element(By.CSS_SELECTOR,
                                             "#date-picker-dialog")
    date_picker_dialog.send_keys("03/04/1999")

    # 28. Click 'securityNumber'
    securitynumber = driver.find_element(By.CSS_SELECTOR,
                                         "[name='securityNumber']")
    securitynumber.click()

    # 29. Scroll window by ('0','272')
    driver.execute_script("window.scrollBy(0,272)")

    # 30. Type '212543543' in 'securityNumber'
    securitynumber = driver.find_element(By.CSS_SELECTOR,
                                         "[name='securityNumber']")
    securitynumber.send_keys("212543543")

    # 31. Click 'point1'
    point1 = driver.find_element(By.CSS_SELECTOR,
                                 "[name='point1']")
    point1.click()

    # 32. Click 'LABEL'
    label = driver.find_element(By.XPATH,
                                "//div[2]/label")
    label.click()

    # 33. Click 'point3'
    point3 = driver.find_element(By.CSS_SELECTOR,
                                 "[name='point3']")
    point3.click()

    # 34. Scroll window by ('0','206')
    driver.execute_script("window.scrollBy(0,206)")

    # 35. Click 'Submit'
    time.sleep(20)
    submit = driver.find_element(By.XPATH,
                                 "//button[. = 'Submit']")
    submit.click()

    # # 36. Is 'Please Verify your email and phone nu...' present?
    # please_verify_your_email_and_phone_nu_ = driver.find_element(By.XPATH,
    #                                                              "//div[. = ' Please Verify your email and phone number!']")

    # # 37. Is 'Verify OTP' present?
    # verify_otp = driver.find_element(By.XPATH,
    #                                  "//button[. = 'Verify OTP']")

    WebDriverWait(driver , 10).until(
        EC.presence_of_element_located((By.XPATH , "//div[@class='modal-body']"))
    )
    


    response = requests.get("https://avaxdevapi.akru.co/api/user/showOtp/" + useremail)
    res =response.json()

    smsotp = res['body']['smsVerifyKey']
    mailotp = res['body']['emailVerifyKey']

    time.sleep(2)

    firstmailotp  = driver.find_element(By.NAME , "v1")
    firstmailotp.send_keys(mailotp[0])

    secmailotp  = driver.find_element(By.NAME , "v2")
    secmailotp.send_keys(mailotp[1])

    thirdmailotp  = driver.find_element(By.NAME , "v3")
    thirdmailotp.send_keys(mailotp[2])

    fourmailotp  = driver.find_element(By.NAME , "v4")
    fourmailotp.send_keys(mailotp[3])


    #SMS OTP
    firstsmsotp  = driver.find_element(By.NAME , "v5")
    firstsmsotp.send_keys(smsotp[0])

    secsmsotp  = driver.find_element(By.NAME , "v6")
    secsmsotp.send_keys(smsotp[1])

    thirdsmsotp  = driver.find_element(By.NAME , "v7")
    thirdsmsotp.send_keys(smsotp[2])

    foursmsotp  = driver.find_element(By.NAME , "v8")
    foursmsotp.send_keys(smsotp[3])

    driver.find_element(By.XPATH , "//button[@class='primary-btn mt-4 mb-2 py-2']").click()


    # try:
    #     #driver.find_element(By.XPATH , "//div[@class='_g']")
    #     if(WebDriverWait(driver, 20).until(
    #             EC.presence_of_element_located((By.XPATH , "//div[@class='_g']"))
    #         )): 
    #         print("Found")
       
    # except:
    #     print("No found")



    try:
        WebDriverWait(driver, 10).until(EC.frame_to_be_available_and_switch_to_it((By.XPATH , "//iframe[@class='magic-iframe']")) )
        WebDriverWait(driver , 8).until(
        EC.presence_of_element_located((By.XPATH , "//div[@class='_g']"))
        )
        print("found")
    except:
        print("No found")


    response2 = requests.get("https://api.testmail.app/api/json?apikey=dc262850-1139-41af-963c-c18eee67212c&namespace=w9m3z&pretty=true")
    res2 =response2.json()
    testn = "test"+strvariable
    for i in res2['emails']:
    #print(i)
    #print(type(i))
        tak = i['tag']
        print(tak)

        if(tak == testn):
            required_dic = i
            req_sub = required_dic['subject']
            print(req_sub)
            if (req_sub == "Log in to Akru TestNet"):
                required_str = required_dic['text']


    #WebDriverWait(driver, 10).until(EC.frameToBeAvailableAndSwitchToIt(By.xpath("//iframe[@class='magic-iframe']")))   
    # WebDriverWait(driver, 10).until(EC.frame_to_be_available_and_switch_to_it((By.XPATH , "//iframe[@class='magic-iframe']")) )
    # WebDriverWait(driver , 8).until(
    #     EC.presence_of_element_located((By.XPATH , "//div[@class='_d']"))
    # )
    
    #text = driver.find_element(By.CLASS_NAME , "mg_bd mg_bf _f").text()
    
    linkfet = re.search( "(?<=Log in to Akru TestNet \().*.(?=\).\nConfirming this request will securely)" , required_str , re.DOTALL)
    print("..................link Group..................")
    link = linkfet.group()
    print(link)
    #print(text)
    time.sleep(2)

    driver.execute_script("window.open('');")
    # Switch to the new window and open new URL
    driver.switch_to.window(driver.window_handles[1])
    driver.get(link)
    time.sleep(2)
    driver.switch_to.window(driver.window_handles[0])
   
test_main()s
